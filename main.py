import os
from telegram import Update, InlineKeyboardMarkup, InlineKeyboardButton
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, CallbackQueryHandler, ContextTypes, filters

BOT_TOKEN = os.getenv("BOT_TOKEN")
ADMIN_ID = int(os.getenv("ADMIN_ID"))

auto_models = [
    "Toyota Hilux", "Toyota Tundra", "Toyota Tacoma", "Mitsubishi L200", "Isuzu D-Max",
    "Nissan Navara (NP300)", "Nissan Titan / Titan XD", "Ford Ranger", "Ford F-150 / F-250 / F-350",
    "Volkswagen Amarok", "Mazda BT-50", "SsangYong Actyon Sports", "UAZ Pickup",
    "Great Wall Wingle 5 / Wingle 7", "Great Wall Poer (GWM Poer)", "JAC T6 / T8 / T9",
    "Foton Tunland V9 / G7", "Sollers ST8", "Chevrolet Colorado / Silverado", "GMC Sierra / Canyon",
    "RAM 1500 / 2500 / 3500", "Jeep Gladiator", "Honda Ridgeline", "Rivian R1T",
    "Changan Hunter / F70", "JMC Vigus / Baodian", "Dongfeng DF6"
]

kunq_types = ["–ö—É–Ω–≥ –°—Ç–∞–Ω–¥–∞—Ä—Ç", "–ö—É–Ω–≥ Pro", "–ö—É–Ω–≥ –ø–æ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–º—É –∑–∞–∫–∞–∑—É", "–î—Ä—É–≥–æ–µ"]

kunq_texts = {
    "–ö—É–Ω–≥ –°—Ç–∞–Ω–¥–∞—Ä—Ç": "‚úÖ –ë–∞–∑–æ–≤–∞—è –∫–æ–º–ø–ª–µ–∫—Ç–∞—Ü–∏—è –∫—É–Ω–≥–∞ Wild Wheels\nüî© –ê–ª—é–º–∏–Ω–∏–µ–≤—ã–π —Å–≤–∞—Ä–Ω–æ–π –∫–∞—Ä–∫–∞—Å\nüö™ –ó–∞–¥–Ω—è—è –¥–≤–µ—Ä—å –Ω–∞ –≥–∞–∑-–ª–∏—Ñ—Ç–∞—Ö\nü™ü –ì–ª—É—Ö–∏–µ –±–æ–∫–æ–≤–∏–Ω—ã –∏–ª–∏ –æ—Ç–∫—Ä—ã–≤–∞—é—â–∏–µ—Å—è –ª—é–∫–∏\nüé® –ü–æ—Ä–æ—à–∫–æ–≤–∞—è –ø–æ–∫—Ä–∞—Å–∫–∞\n–ù–∞–¥—ë–∂–Ω–æ, –ø—Ä–∞–∫—Ç–∏—á–Ω–æ, –¥–æ—Å—Ç—É–ø–Ω–æ.\n–û—Ç–ª–∏—á–Ω—ã–π –≤—ã–±–æ—Ä –¥–ª—è –ø–æ–≤—Å–µ–¥–Ω–µ–≤–Ω—ã—Ö –∑–∞–¥–∞—á.",
    "–ö—É–Ω–≥ Pro": "üõ† –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –∫–æ–º–ø–ª–µ–∫—Ç–∞—Ü–∏—è Pro\nüí° –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π —Å–≤–µ—Ç, –≤–µ–Ω—Ç–∏–ª—è—Ü–∏—è\nü™ü –ë–æ–∫–æ–≤—ã–µ –æ–∫–Ω–∞ —Å –º–æ—Å–∫–∏—Ç–Ω—ã–º–∏ —Å–µ—Ç–∫–∞–º–∏\n‚öôÔ∏è –£—Ç–µ–ø–ª—ë–Ω–Ω—ã–µ –ø–∞–Ω–µ–ª–∏, —É—Å–∏–ª–µ–Ω–Ω—ã–π –∫–∞—Ä–∫–∞—Å\nüé® –ü—Ä–µ–º–∏—É–º-–æ—Ç–¥–µ–ª–∫–∞, —Å–ø–µ—Ü—Ü–≤–µ—Ç–∞\n–î–ª—è —Ç–µ—Ö, –∫—Ç–æ —É—Ö–æ–¥–∏—Ç –∑–∞ –≥–æ—Ä–∏–∑–æ–Ω—Ç.",
    "–ö—É–Ω–≥ –ø–æ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–º—É –∑–∞–∫–∞–∑—É": "üîß –•–æ—á–µ—à—å —Å–≤–æ–π —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫—É–Ω–≥?\n–ú—ã –¥–µ–ª–∞–µ–º: —Å–ø–∞–ª—å–Ω–∏–∫–∏, —è—â–∏–∫–∏, –∫—É—Ö–Ω–∏, –¥—É—à, –æ—Å–≤–µ—â–µ–Ω–∏–µ, –æ–∫–Ω–∞, –∞–≤—Ç–æ–Ω–æ–º–∫—É –∏ –≤—Å—ë, —á—Ç–æ –Ω—É–∂–Ω–æ.\n–ù–∞–ø–∏—à–∏, —á—Ç–æ —Ö–æ—á–µ—à—å ‚Äî –ø–æ–¥–±–µ—Ä—ë–º —Ä–µ—à–µ–Ω–∏–µ –∏ —Å–¥–µ–ª–∞–µ–º –ø—Ä–æ–µ–∫—Ç.",
    "–î—Ä—É–≥–æ–µ": "üöô –ò–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç –Ω–µ –∫—É–Ω–≥, –∞: –∫—Ä—ã—à–∫–∞ –∫—É–∑–æ–≤–∞, –±–∞–≥–∞–∂–Ω–∏–∫, —ç–∫—Å–ø–µ–¥–∏—Ü–∏–æ–Ω–Ω–∏–∫ –∏ —Ç.–¥.\n–ù–∞–ø–∏—à–∏ –≤ —Å–≤–æ–±–æ–¥–Ω–æ–π —Ñ–æ—Ä–º–µ, –º—ã –ø–æ–º–æ–∂–µ–º."
}

user_states = {}

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    buttons = [[InlineKeyboardButton(text=model, callback_data=model)] for model in auto_models[:5]]
    await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à—É –º–æ–¥–µ–ª—å –ø–∏–∫–∞–ø–∞:", reply_markup=InlineKeyboardMarkup(buttons))

async def model_selected(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    user_states[query.from_user.id] = query.data
    buttons = [[InlineKeyboardButton(text=qt, callback_data=qt)] for qt in kunq_types]
    await query.edit_message_text(f"–í—ã –≤—ã–±—Ä–∞–ª–∏ {query.data}. –¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∫—É–Ω–≥–∞:", reply_markup=InlineKeyboardMarkup(buttons))

async def kunq_selected(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    kunq = query.data
    text = kunq_texts.get(kunq, "–û–ø–∏—Å–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ.")
    buttons = [[InlineKeyboardButton(text="üì≤ –û—Å—Ç–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä –¥–ª—è —Å–≤—è–∑–∏", callback_data="leave_contact")]]
    await query.edit_message_text(text=text, reply_markup=InlineKeyboardMarkup(buttons))

async def request_contact(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    await query.edit_message_text("‚úçÔ∏è –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏–ª–∏ —Å–ø–æ—Å–æ–± —Å–≤—è–∑–∏ ‚Äî –º—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏.")

async def handle_contact(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_msg = update.message.text
    await context.bot.send_message(chat_id=ADMIN_ID, text=f"üì© –ù–æ–≤—ã–π –∫–æ–Ω—Ç–∞–∫—Ç —Å –±–æ—Ç–∞:
{user_msg}")
    await update.message.reply_text("‚úÖ –°–ø–∞—Å–∏–±–æ! –ú—ã –ø–æ–ª—É—á–∏–ª–∏ –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ.")

def main():
    app = ApplicationBuilder().token(BOT_TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CallbackQueryHandler(model_selected, pattern='^(' + '|'.join(auto_models) + ')$'))
    app.add_handler(CallbackQueryHandler(kunq_selected, pattern='^(' + '|'.join(kunq_types) + ')$'))
    app.add_handler(CallbackQueryHandler(request_contact, pattern='^leave_contact$'))
    app.add_handler(MessageHandler(filters.TEXT & (~filters.COMMAND), handle_contact))
    app.run_polling()

if __name__ == "__main__":
    main()
